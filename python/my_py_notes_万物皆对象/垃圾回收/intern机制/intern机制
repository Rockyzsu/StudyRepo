1000个'HelloWorld', 乃至更多会撑爆内存吗？

python中有这样⼀个机制—— intern机制
让他只占⽤⼀个"HelloWorld"所占的内存空间
靠引⽤计数去维护何时释放

总结
1. ⼩整数[-5,256]共⽤对象， 常驻内存
2. 单个字符共⽤对象， 常驻内存
3. 单个单词, 不可修改, 默认开启intern机制, 共⽤对象, 引⽤计数为0, 则销毁
    In [22]: a = 'acv'
    In [23]: b = 'acv'
    In [24]: id(a)
    Out[24]: 4352379624
    In [25]: id(b)
    Out[25]: 4352379624
    In [26]: del(a)
    In [27]: del(b)
    In [28]: e = 'acv'
    In [29]: id(e)
    Out[29]: 4354497256
4. 字符串(含有空格), 不可修改, 没开启intern机制, 不共⽤对象, 引⽤计数为0, 销毁
    In [30]: a = 'he a'
    In [31]: b = 'he a'
    In [32]: id(a)
    Out[32]: 4353990816
    In [33]: id(b)
    Out[33]: 4353992664
5. 大整数不共用内存, 引用计数为0, 销毁
    In [34]: a = 1356
    In [35]: b = 1356
    In [36]: id(a)
    Out[36]: 4353979184
    In [37]: id(b)
    Out[37]: 4353980176
6. 数值类型和字符串类型在 Python 中都是不可变的， 这意味着你⽆法修改
这个对象的值， 每次对变量的修改， 实际上是创建⼀个新的对象
    In [38]: id(a)
    Out[38]: 4353979184
    In [39]: a+=1
    In [40]: id(a)
    Out[40]: 4353980912
    In [41]: b = 'he'
    In [42]: id(b)
    Out[42]: 4327889752
    In [43]: b = 'ss'
    In [44]: id(b)
    Out[44]: 4327903392